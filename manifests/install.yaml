---
apiVersion: v1
kind: Namespace
metadata:
  name: kafka-topics
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: kafkatopics.pincette.net
spec:
  group: pincette.net
  names:
    kind: KafkaTopic
    plural: kafkatopics
    singular: kafkatopic
  scope: Namespaced
  versions:
    - name: v1
      schema:
        openAPIV3Schema:
          properties:
            spec:
              properties:
                maxMessageBytes:
                  type: integer
                name:
                  type: string
                partitions:
                  type: integer
                replicationFactor:
                  type: integer
                retentionBytes:
                  type: integer
                retentionMilliseconds:
                  type: integer
              type: object
            status:
              properties:
                error:
                  type: string
                messageLag:
                  additionalProperties:
                    additionalProperties:
                      type: integer
                    type: object
                  type: object
                phase:
                  enum:
                    - Pending
                    - Ready
                  type: string
              required:
                - phase
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kafka-topics-controller
  labels:
    app.kubernetes.io/component: kafka-topics-controller
    app.kubernetes.io/name: kafka-topics-controller
rules:
  - apiGroups:
      - pincette.net
    resources:
      - kafkatopics
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - pincette.net
    resources:
      - kafkatopics/status
    verbs:
      - patch
      - update
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kafka-topics-controller
  namespace: kafka-topics
  labels:
    app.kubernetes.io/component: kafka-topics-controller
    app.kubernetes.io/name: kafka-topics-controller
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kafka-topics-controller
  labels:
    app.kubernetes.io/component: kafka-topics-controller
    app.kubernetes.io/name: kafka-topics-controller
subjects:
  - kind: ServiceAccount
    name: kafka-topics-controller
    namespace: kafka-topics
roleRef:
  name: kafka-topics-controller
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-topics-controller
  namespace: kafka-topics
spec:
  replicas: 1
  selector:
    matchLabels:
      apps.kubernetes.io/name: kafka-topics-controller
  template:
    metadata:
      labels:
        apps.kubernetes.io/name: kafka-topics-controller
    spec:
      containers:
        - name: kafka-topics-controller
          image: wdonne/pincette-kafka-topics:latest
          imagePullPolicy: Always
          resources: { }
          volumeMounts:
            - mountPath: /conf
              name: config
      nodeSelector:
        kubernetes.io/arch: arm64
      serviceAccountName: kafka-topics-controller
      volumes:
        - name: config
          configMap:
            name: config
            items:
              - key: application.conf
                path: application.conf
